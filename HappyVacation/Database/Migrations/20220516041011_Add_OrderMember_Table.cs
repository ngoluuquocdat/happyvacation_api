using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace HappyVacation.Database.Migrations
{
    public partial class Add_OrderMember_Table : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.AddColumn<string>(
                name: "TouristIdentityNum",
                table: "Orders",
                type: "nvarchar(max)",
                nullable: true);

            migrationBuilder.CreateTable(
                name: "OrderMembers",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    IdentityNum = table.Column<string>(type: "nvarchar(15)", maxLength: 15, nullable: false),
                    FullName = table.Column<string>(type: "nvarchar(60)", maxLength: 60, nullable: false),
                    DateOfBirth = table.Column<DateTime>(type: "datetime2", nullable: false),
                    IsChild = table.Column<bool>(type: "bit", nullable: false),
                    OrderId = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OrderMembers", x => x.Id);
                    table.ForeignKey(
                        name: "FK_OrderMembers_Orders_OrderId",
                        column: x => x.OrderId,
                        principalTable: "Orders",
                        principalColumn: "Id");
                });

            migrationBuilder.InsertData(
                table: "OrderMembers",
                columns: new[] { "Id", "DateOfBirth", "FullName", "IdentityNum", "IsChild", "OrderId" },
                values: new object[,]
                {
                    { 1, new DateTime(2000, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), "Dinh Cong Tai", "201788301", false, 1 },
                    { 2, new DateTime(2000, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified), "Ho Thao Khanh", "201877103", false, 1 },
                    { 3, new DateTime(2015, 7, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), "Dinh Cong Khoi", "", true, 1 },
                    { 4, new DateTime(2000, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), "Dinh Cong Tai", "201788301", false, 2 },
                    { 5, new DateTime(2000, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified), "Ho Thao Khanh", "201877103", false, 2 },
                    { 6, new DateTime(2000, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), "Dinh Cong Tai", "201788301", false, 5 },
                    { 7, new DateTime(2000, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified), "Ho Thao Khanh", "201877103", false, 5 },
                    { 8, new DateTime(2000, 10, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), "Ngo Quoc Dat", "206286537", false, 5 },
                    { 9, new DateTime(2015, 7, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), "Dinh Cong Khoi", "", true, 5 },
                    { 10, new DateTime(2000, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), "Dinh Cong Tai", "201788301", false, 6 },
                    { 11, new DateTime(2000, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified), "Ho Thao Khanh", "201877103", false, 6 },
                    { 12, new DateTime(2000, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), "Ho Van An", "203676201", false, 10 },
                    { 13, new DateTime(2000, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified), "Nguyen Van Bao", "203979301", false, 10 },
                    { 14, new DateTime(2000, 10, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), "Ngo Quoc Dat", "206286537", false, 10 },
                    { 15, new DateTime(2016, 7, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), "Ho Van Thanh", "", true, 10 },
                    { 16, new DateTime(2000, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), "Ho Van An", "203676201", false, 11 },
                    { 17, new DateTime(2000, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified), "Nguyen Van Bao", "203979301", false, 11 },
                    { 18, new DateTime(2016, 7, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), "Ho Van Thanh", "", true, 11 },
                    { 19, new DateTime(2000, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), "Ho Van An", "203676201", false, 12 },
                    { 20, new DateTime(2000, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified), "Nguyen Van Bao", "203979301", false, 12 },
                    { 21, new DateTime(2016, 7, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), "Ho Van Thanh", "", true, 12 },
                    { 22, new DateTime(2000, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), "Anh Tai Ngo Dien", "203979301", false, 16 },
                    { 23, new DateTime(2000, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified), "Quang Bao Pham", "203979301", false, 17 },
                    { 24, new DateTime(2000, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified), "Quang Bao Pham", "203979301", false, 20 },
                    { 25, new DateTime(2002, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), "Phuong Nguyen Thi", "204797102", false, 20 },
                    { 26, new DateTime(2000, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified), "Quang Bao Pham", "203979301", false, 62 },
                    { 27, new DateTime(2002, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), "Phuong Nguyen Thi", "204797102", false, 62 },
                    { 28, new DateTime(2015, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), "Quang Minh Pham", "", true, 62 },
                    { 29, new DateTime(2000, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified), "Quang Bao Pham", "203979301", false, 63 },
                    { 30, new DateTime(2002, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), "Phuong Nguyen Thi", "204797102", false, 63 },
                    { 31, new DateTime(2015, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), "Quang Minh Pham", "", true, 63 },
                    { 32, new DateTime(2000, 10, 18, 0, 0, 0, 0, DateTimeKind.Unspecified), "Quoc Dat Ngo Luu", "206282345", false, 64 },
                    { 33, new DateTime(2000, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified), "Xuan Toan Mai", "204362562", false, 64 },
                    { 34, new DateTime(2015, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), "Quang Minh Pham", "", true, 64 },
                    { 35, new DateTime(2015, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), "Xuan Khai Mai", "", true, 64 }
                });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 203, 212, 140, 110, 138, 147, 251, 79, 153, 150, 12, 250, 151, 192, 198, 34, 45, 255, 107, 90, 164, 130, 200, 152, 39, 150, 56, 210, 141, 93, 215, 76, 81, 11, 184, 200, 145, 130, 93, 58, 119, 0, 240, 199, 203, 113, 42, 253, 57, 182, 89, 41, 35, 65, 30, 6, 73, 95, 46, 89, 192, 82, 225, 19 }, new byte[] { 222, 119, 119, 100, 136, 212, 75, 209, 215, 100, 153, 23, 49, 186, 172, 252, 34, 198, 131, 38, 137, 71, 184, 233, 93, 149, 72, 143, 200, 16, 253, 28, 252, 38, 30, 122, 1, 132, 241, 173, 225, 117, 64, 67, 76, 92, 133, 217, 20, 14, 155, 39, 190, 97, 251, 133, 242, 126, 176, 3, 226, 224, 123, 115, 100, 42, 174, 250, 145, 215, 127, 169, 106, 255, 71, 120, 153, 246, 6, 228, 168, 69, 136, 254, 208, 108, 111, 39, 195, 37, 217, 221, 166, 238, 234, 103, 128, 13, 26, 54, 224, 182, 97, 202, 145, 186, 161, 50, 183, 9, 196, 249, 203, 196, 224, 131, 93, 127, 154, 144, 31, 235, 102, 56, 29, 28, 216, 237 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 8, 168, 216, 76, 16, 174, 173, 88, 212, 237, 39, 16, 200, 29, 200, 102, 97, 55, 211, 35, 141, 168, 83, 180, 222, 219, 87, 22, 181, 179, 141, 25, 134, 64, 214, 103, 251, 47, 64, 57, 143, 175, 105, 11, 160, 218, 192, 17, 184, 14, 101, 169, 155, 102, 237, 229, 211, 107, 225, 72, 177, 230, 26, 83 }, new byte[] { 222, 119, 119, 100, 136, 212, 75, 209, 215, 100, 153, 23, 49, 186, 172, 252, 34, 198, 131, 38, 137, 71, 184, 233, 93, 149, 72, 143, 200, 16, 253, 28, 252, 38, 30, 122, 1, 132, 241, 173, 225, 117, 64, 67, 76, 92, 133, 217, 20, 14, 155, 39, 190, 97, 251, 133, 242, 126, 176, 3, 226, 224, 123, 115, 100, 42, 174, 250, 145, 215, 127, 169, 106, 255, 71, 120, 153, 246, 6, 228, 168, 69, 136, 254, 208, 108, 111, 39, 195, 37, 217, 221, 166, 238, 234, 103, 128, 13, 26, 54, 224, 182, 97, 202, 145, 186, 161, 50, 183, 9, 196, 249, 203, 196, 224, 131, 93, 127, 154, 144, 31, 235, 102, 56, 29, 28, 216, 237 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 245, 10, 77, 242, 235, 32, 205, 204, 166, 125, 117, 186, 131, 80, 252, 28, 131, 208, 164, 52, 206, 87, 161, 107, 100, 88, 199, 72, 90, 13, 182, 15, 35, 45, 92, 97, 155, 70, 107, 241, 100, 6, 168, 204, 37, 98, 252, 227, 25, 237, 6, 74, 62, 103, 91, 238, 48, 165, 19, 173, 110, 241, 13, 153 }, new byte[] { 222, 119, 119, 100, 136, 212, 75, 209, 215, 100, 153, 23, 49, 186, 172, 252, 34, 198, 131, 38, 137, 71, 184, 233, 93, 149, 72, 143, 200, 16, 253, 28, 252, 38, 30, 122, 1, 132, 241, 173, 225, 117, 64, 67, 76, 92, 133, 217, 20, 14, 155, 39, 190, 97, 251, 133, 242, 126, 176, 3, 226, 224, 123, 115, 100, 42, 174, 250, 145, 215, 127, 169, 106, 255, 71, 120, 153, 246, 6, 228, 168, 69, 136, 254, 208, 108, 111, 39, 195, 37, 217, 221, 166, 238, 234, 103, 128, 13, 26, 54, 224, 182, 97, 202, 145, 186, 161, 50, 183, 9, 196, 249, 203, 196, 224, 131, 93, 127, 154, 144, 31, 235, 102, 56, 29, 28, 216, 237 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 155, 184, 123, 140, 112, 119, 240, 229, 24, 169, 34, 151, 146, 157, 144, 193, 168, 174, 248, 0, 160, 254, 253, 53, 190, 254, 146, 114, 239, 74, 217, 120, 186, 124, 246, 162, 50, 124, 175, 127, 60, 110, 242, 138, 193, 240, 79, 237, 179, 127, 223, 28, 235, 180, 126, 185, 243, 3, 30, 26, 41, 10, 25, 242 }, new byte[] { 222, 119, 119, 100, 136, 212, 75, 209, 215, 100, 153, 23, 49, 186, 172, 252, 34, 198, 131, 38, 137, 71, 184, 233, 93, 149, 72, 143, 200, 16, 253, 28, 252, 38, 30, 122, 1, 132, 241, 173, 225, 117, 64, 67, 76, 92, 133, 217, 20, 14, 155, 39, 190, 97, 251, 133, 242, 126, 176, 3, 226, 224, 123, 115, 100, 42, 174, 250, 145, 215, 127, 169, 106, 255, 71, 120, 153, 246, 6, 228, 168, 69, 136, 254, 208, 108, 111, 39, 195, 37, 217, 221, 166, 238, 234, 103, 128, 13, 26, 54, 224, 182, 97, 202, 145, 186, 161, 50, 183, 9, 196, 249, 203, 196, 224, 131, 93, 127, 154, 144, 31, 235, 102, 56, 29, 28, 216, 237 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 8,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 201, 13, 25, 216, 109, 183, 204, 27, 236, 84, 111, 100, 105, 162, 218, 179, 36, 218, 211, 1, 163, 103, 234, 120, 122, 183, 29, 224, 70, 205, 211, 207, 163, 197, 64, 59, 144, 57, 68, 35, 172, 1, 204, 15, 233, 16, 77, 42, 87, 73, 9, 70, 42, 42, 37, 201, 123, 125, 166, 255, 189, 99, 183, 171 }, new byte[] { 222, 119, 119, 100, 136, 212, 75, 209, 215, 100, 153, 23, 49, 186, 172, 252, 34, 198, 131, 38, 137, 71, 184, 233, 93, 149, 72, 143, 200, 16, 253, 28, 252, 38, 30, 122, 1, 132, 241, 173, 225, 117, 64, 67, 76, 92, 133, 217, 20, 14, 155, 39, 190, 97, 251, 133, 242, 126, 176, 3, 226, 224, 123, 115, 100, 42, 174, 250, 145, 215, 127, 169, 106, 255, 71, 120, 153, 246, 6, 228, 168, 69, 136, 254, 208, 108, 111, 39, 195, 37, 217, 221, 166, 238, 234, 103, 128, 13, 26, 54, 224, 182, 97, 202, 145, 186, 161, 50, 183, 9, 196, 249, 203, 196, 224, 131, 93, 127, 154, 144, 31, 235, 102, 56, 29, 28, 216, 237 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 9,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 130, 203, 59, 17, 138, 111, 23, 102, 161, 245, 8, 66, 40, 115, 225, 133, 143, 232, 225, 127, 165, 77, 220, 136, 197, 199, 13, 80, 167, 216, 155, 121, 27, 134, 13, 76, 63, 134, 108, 243, 254, 232, 118, 111, 44, 20, 31, 209, 233, 46, 3, 181, 114, 219, 255, 118, 101, 16, 184, 24, 177, 139, 94, 71 }, new byte[] { 222, 119, 119, 100, 136, 212, 75, 209, 215, 100, 153, 23, 49, 186, 172, 252, 34, 198, 131, 38, 137, 71, 184, 233, 93, 149, 72, 143, 200, 16, 253, 28, 252, 38, 30, 122, 1, 132, 241, 173, 225, 117, 64, 67, 76, 92, 133, 217, 20, 14, 155, 39, 190, 97, 251, 133, 242, 126, 176, 3, 226, 224, 123, 115, 100, 42, 174, 250, 145, 215, 127, 169, 106, 255, 71, 120, 153, 246, 6, 228, 168, 69, 136, 254, 208, 108, 111, 39, 195, 37, 217, 221, 166, 238, 234, 103, 128, 13, 26, 54, 224, 182, 97, 202, 145, 186, 161, 50, 183, 9, 196, 249, 203, 196, 224, 131, 93, 127, 154, 144, 31, 235, 102, 56, 29, 28, 216, 237 } });

            migrationBuilder.CreateIndex(
                name: "IX_OrderMembers_OrderId",
                table: "OrderMembers",
                column: "OrderId");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "OrderMembers");

            migrationBuilder.DropColumn(
                name: "TouristIdentityNum",
                table: "Orders");

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 247, 48, 227, 132, 135, 15, 20, 229, 186, 241, 171, 117, 7, 145, 49, 245, 193, 160, 212, 215, 220, 186, 219, 227, 140, 248, 145, 60, 67, 153, 9, 119, 77, 126, 148, 34, 106, 244, 14, 116, 77, 207, 14, 93, 180, 143, 50, 33, 29, 114, 68, 12, 66, 135, 243, 26, 235, 148, 228, 183, 203, 150, 255, 187 }, new byte[] { 79, 234, 248, 255, 92, 176, 149, 117, 15, 81, 105, 198, 124, 43, 232, 63, 10, 30, 54, 53, 178, 101, 212, 130, 54, 159, 113, 228, 198, 60, 2, 194, 221, 234, 101, 240, 63, 30, 214, 109, 184, 23, 239, 2, 89, 241, 85, 160, 252, 132, 19, 149, 136, 88, 191, 138, 132, 1, 131, 2, 255, 122, 210, 146, 220, 22, 55, 251, 127, 103, 231, 231, 152, 220, 164, 6, 75, 239, 239, 117, 184, 14, 237, 116, 97, 219, 95, 188, 71, 125, 150, 253, 20, 207, 153, 19, 130, 93, 15, 243, 73, 86, 160, 159, 5, 147, 138, 149, 165, 205, 228, 72, 181, 160, 187, 205, 187, 233, 225, 15, 43, 234, 100, 148, 227, 107, 140, 225 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 4, 110, 214, 149, 93, 0, 27, 88, 56, 63, 75, 51, 154, 174, 136, 210, 20, 57, 163, 78, 175, 131, 180, 176, 178, 239, 195, 47, 240, 221, 80, 95, 79, 60, 193, 7, 22, 41, 29, 245, 59, 59, 154, 190, 245, 52, 5, 226, 156, 14, 131, 154, 228, 172, 245, 164, 155, 66, 33, 136, 161, 219, 192, 98 }, new byte[] { 79, 234, 248, 255, 92, 176, 149, 117, 15, 81, 105, 198, 124, 43, 232, 63, 10, 30, 54, 53, 178, 101, 212, 130, 54, 159, 113, 228, 198, 60, 2, 194, 221, 234, 101, 240, 63, 30, 214, 109, 184, 23, 239, 2, 89, 241, 85, 160, 252, 132, 19, 149, 136, 88, 191, 138, 132, 1, 131, 2, 255, 122, 210, 146, 220, 22, 55, 251, 127, 103, 231, 231, 152, 220, 164, 6, 75, 239, 239, 117, 184, 14, 237, 116, 97, 219, 95, 188, 71, 125, 150, 253, 20, 207, 153, 19, 130, 93, 15, 243, 73, 86, 160, 159, 5, 147, 138, 149, 165, 205, 228, 72, 181, 160, 187, 205, 187, 233, 225, 15, 43, 234, 100, 148, 227, 107, 140, 225 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 234, 112, 253, 254, 100, 46, 187, 156, 96, 120, 113, 71, 145, 122, 57, 125, 189, 67, 247, 30, 123, 56, 207, 188, 97, 149, 67, 127, 128, 89, 104, 200, 133, 86, 30, 113, 162, 63, 142, 146, 169, 66, 133, 225, 0, 61, 41, 159, 44, 72, 101, 23, 232, 104, 199, 180, 159, 31, 247, 8, 83, 69, 95, 169 }, new byte[] { 79, 234, 248, 255, 92, 176, 149, 117, 15, 81, 105, 198, 124, 43, 232, 63, 10, 30, 54, 53, 178, 101, 212, 130, 54, 159, 113, 228, 198, 60, 2, 194, 221, 234, 101, 240, 63, 30, 214, 109, 184, 23, 239, 2, 89, 241, 85, 160, 252, 132, 19, 149, 136, 88, 191, 138, 132, 1, 131, 2, 255, 122, 210, 146, 220, 22, 55, 251, 127, 103, 231, 231, 152, 220, 164, 6, 75, 239, 239, 117, 184, 14, 237, 116, 97, 219, 95, 188, 71, 125, 150, 253, 20, 207, 153, 19, 130, 93, 15, 243, 73, 86, 160, 159, 5, 147, 138, 149, 165, 205, 228, 72, 181, 160, 187, 205, 187, 233, 225, 15, 43, 234, 100, 148, 227, 107, 140, 225 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 37, 62, 63, 98, 50, 199, 222, 237, 253, 41, 130, 168, 66, 132, 182, 38, 232, 103, 60, 14, 161, 0, 87, 39, 167, 95, 167, 227, 17, 232, 145, 118, 253, 251, 55, 154, 59, 3, 228, 208, 75, 40, 165, 215, 28, 28, 182, 106, 161, 137, 189, 236, 181, 205, 105, 50, 19, 252, 231, 10, 197, 241, 34, 186 }, new byte[] { 79, 234, 248, 255, 92, 176, 149, 117, 15, 81, 105, 198, 124, 43, 232, 63, 10, 30, 54, 53, 178, 101, 212, 130, 54, 159, 113, 228, 198, 60, 2, 194, 221, 234, 101, 240, 63, 30, 214, 109, 184, 23, 239, 2, 89, 241, 85, 160, 252, 132, 19, 149, 136, 88, 191, 138, 132, 1, 131, 2, 255, 122, 210, 146, 220, 22, 55, 251, 127, 103, 231, 231, 152, 220, 164, 6, 75, 239, 239, 117, 184, 14, 237, 116, 97, 219, 95, 188, 71, 125, 150, 253, 20, 207, 153, 19, 130, 93, 15, 243, 73, 86, 160, 159, 5, 147, 138, 149, 165, 205, 228, 72, 181, 160, 187, 205, 187, 233, 225, 15, 43, 234, 100, 148, 227, 107, 140, 225 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 8,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 4, 114, 108, 113, 183, 98, 128, 112, 159, 50, 255, 2, 79, 6, 61, 162, 225, 149, 4, 76, 216, 182, 28, 61, 248, 97, 46, 242, 213, 55, 145, 213, 228, 189, 5, 210, 75, 139, 99, 60, 245, 83, 63, 242, 119, 158, 155, 193, 204, 91, 125, 243, 220, 222, 85, 99, 219, 23, 139, 252, 164, 13, 65, 91 }, new byte[] { 79, 234, 248, 255, 92, 176, 149, 117, 15, 81, 105, 198, 124, 43, 232, 63, 10, 30, 54, 53, 178, 101, 212, 130, 54, 159, 113, 228, 198, 60, 2, 194, 221, 234, 101, 240, 63, 30, 214, 109, 184, 23, 239, 2, 89, 241, 85, 160, 252, 132, 19, 149, 136, 88, 191, 138, 132, 1, 131, 2, 255, 122, 210, 146, 220, 22, 55, 251, 127, 103, 231, 231, 152, 220, 164, 6, 75, 239, 239, 117, 184, 14, 237, 116, 97, 219, 95, 188, 71, 125, 150, 253, 20, 207, 153, 19, 130, 93, 15, 243, 73, 86, 160, 159, 5, 147, 138, 149, 165, 205, 228, 72, 181, 160, 187, 205, 187, 233, 225, 15, 43, 234, 100, 148, 227, 107, 140, 225 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 9,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 57, 176, 132, 104, 229, 45, 218, 116, 60, 102, 215, 210, 218, 94, 189, 41, 72, 217, 39, 80, 125, 73, 58, 42, 115, 179, 151, 92, 206, 128, 65, 132, 180, 145, 195, 198, 30, 47, 244, 241, 189, 26, 75, 167, 67, 135, 170, 172, 13, 8, 53, 214, 187, 181, 62, 46, 102, 112, 7, 1, 178, 18, 123, 52 }, new byte[] { 79, 234, 248, 255, 92, 176, 149, 117, 15, 81, 105, 198, 124, 43, 232, 63, 10, 30, 54, 53, 178, 101, 212, 130, 54, 159, 113, 228, 198, 60, 2, 194, 221, 234, 101, 240, 63, 30, 214, 109, 184, 23, 239, 2, 89, 241, 85, 160, 252, 132, 19, 149, 136, 88, 191, 138, 132, 1, 131, 2, 255, 122, 210, 146, 220, 22, 55, 251, 127, 103, 231, 231, 152, 220, 164, 6, 75, 239, 239, 117, 184, 14, 237, 116, 97, 219, 95, 188, 71, 125, 150, 253, 20, 207, 153, 19, 130, 93, 15, 243, 73, 86, 160, 159, 5, 147, 138, 149, 165, 205, 228, 72, 181, 160, 187, 205, 187, 233, 225, 15, 43, 234, 100, 148, 227, 107, 140, 225 } });
        }
    }
}
