using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace HappyVacation.Database.Migrations
{
    public partial class Add_ProviderRegistration_Table2 : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_ProviderRegistration_Users_UserId",
                table: "ProviderRegistration");

            migrationBuilder.DropPrimaryKey(
                name: "PK_ProviderRegistration",
                table: "ProviderRegistration");

            migrationBuilder.RenameTable(
                name: "ProviderRegistration",
                newName: "ProviderRegistrations");

            migrationBuilder.RenameIndex(
                name: "IX_ProviderRegistration_UserId",
                table: "ProviderRegistrations",
                newName: "IX_ProviderRegistrations_UserId");

            migrationBuilder.AddPrimaryKey(
                name: "PK_ProviderRegistrations",
                table: "ProviderRegistrations",
                column: "Id");

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 58, 120, 47, 76, 174, 140, 3, 142, 253, 106, 75, 10, 84, 69, 217, 193, 176, 46, 58, 7, 27, 85, 78, 80, 95, 68, 25, 73, 172, 163, 241, 242, 215, 35, 1, 209, 139, 115, 133, 230, 6, 32, 130, 107, 112, 121, 112, 201, 34, 170, 222, 230, 200, 114, 231, 51, 145, 246, 163, 227, 120, 5, 136, 0 }, new byte[] { 119, 31, 53, 121, 108, 39, 131, 29, 196, 57, 184, 141, 169, 92, 125, 55, 14, 231, 231, 240, 123, 133, 145, 204, 195, 90, 249, 209, 153, 214, 122, 78, 73, 37, 193, 100, 145, 243, 71, 123, 108, 134, 51, 24, 55, 148, 202, 104, 24, 97, 161, 203, 58, 30, 0, 156, 203, 182, 230, 98, 75, 2, 143, 231, 216, 188, 198, 94, 115, 55, 55, 64, 130, 129, 107, 197, 51, 177, 197, 11, 102, 239, 219, 18, 56, 104, 106, 19, 151, 39, 95, 128, 40, 95, 164, 206, 50, 204, 8, 254, 58, 167, 0, 113, 250, 221, 210, 59, 208, 212, 131, 12, 203, 192, 222, 89, 68, 126, 205, 16, 157, 161, 219, 154, 59, 52, 205, 102 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 154, 255, 99, 242, 226, 46, 43, 65, 82, 31, 32, 23, 16, 211, 219, 70, 214, 58, 14, 197, 215, 250, 165, 149, 153, 116, 160, 191, 222, 14, 40, 42, 244, 28, 129, 218, 227, 13, 126, 201, 185, 61, 81, 60, 6, 228, 222, 40, 48, 229, 157, 127, 60, 146, 137, 209, 225, 189, 80, 145, 106, 171, 90, 106 }, new byte[] { 119, 31, 53, 121, 108, 39, 131, 29, 196, 57, 184, 141, 169, 92, 125, 55, 14, 231, 231, 240, 123, 133, 145, 204, 195, 90, 249, 209, 153, 214, 122, 78, 73, 37, 193, 100, 145, 243, 71, 123, 108, 134, 51, 24, 55, 148, 202, 104, 24, 97, 161, 203, 58, 30, 0, 156, 203, 182, 230, 98, 75, 2, 143, 231, 216, 188, 198, 94, 115, 55, 55, 64, 130, 129, 107, 197, 51, 177, 197, 11, 102, 239, 219, 18, 56, 104, 106, 19, 151, 39, 95, 128, 40, 95, 164, 206, 50, 204, 8, 254, 58, 167, 0, 113, 250, 221, 210, 59, 208, 212, 131, 12, 203, 192, 222, 89, 68, 126, 205, 16, 157, 161, 219, 154, 59, 52, 205, 102 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 225, 79, 169, 143, 204, 249, 240, 177, 69, 147, 107, 0, 124, 235, 132, 191, 61, 56, 188, 138, 191, 86, 84, 213, 13, 40, 173, 205, 84, 228, 230, 202, 44, 5, 151, 189, 27, 27, 88, 139, 164, 119, 154, 10, 248, 255, 254, 40, 76, 147, 80, 129, 125, 76, 18, 123, 12, 184, 32, 135, 62, 151, 80, 213 }, new byte[] { 119, 31, 53, 121, 108, 39, 131, 29, 196, 57, 184, 141, 169, 92, 125, 55, 14, 231, 231, 240, 123, 133, 145, 204, 195, 90, 249, 209, 153, 214, 122, 78, 73, 37, 193, 100, 145, 243, 71, 123, 108, 134, 51, 24, 55, 148, 202, 104, 24, 97, 161, 203, 58, 30, 0, 156, 203, 182, 230, 98, 75, 2, 143, 231, 216, 188, 198, 94, 115, 55, 55, 64, 130, 129, 107, 197, 51, 177, 197, 11, 102, 239, 219, 18, 56, 104, 106, 19, 151, 39, 95, 128, 40, 95, 164, 206, 50, 204, 8, 254, 58, 167, 0, 113, 250, 221, 210, 59, 208, 212, 131, 12, 203, 192, 222, 89, 68, 126, 205, 16, 157, 161, 219, 154, 59, 52, 205, 102 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 97, 154, 86, 226, 29, 96, 240, 125, 232, 59, 191, 252, 25, 70, 21, 36, 22, 214, 179, 32, 198, 251, 229, 147, 169, 57, 0, 206, 235, 129, 136, 48, 100, 192, 37, 183, 138, 109, 45, 82, 161, 108, 148, 195, 212, 187, 88, 72, 36, 159, 47, 169, 102, 158, 74, 42, 109, 1, 85, 84, 147, 216, 189, 236 }, new byte[] { 119, 31, 53, 121, 108, 39, 131, 29, 196, 57, 184, 141, 169, 92, 125, 55, 14, 231, 231, 240, 123, 133, 145, 204, 195, 90, 249, 209, 153, 214, 122, 78, 73, 37, 193, 100, 145, 243, 71, 123, 108, 134, 51, 24, 55, 148, 202, 104, 24, 97, 161, 203, 58, 30, 0, 156, 203, 182, 230, 98, 75, 2, 143, 231, 216, 188, 198, 94, 115, 55, 55, 64, 130, 129, 107, 197, 51, 177, 197, 11, 102, 239, 219, 18, 56, 104, 106, 19, 151, 39, 95, 128, 40, 95, 164, 206, 50, 204, 8, 254, 58, 167, 0, 113, 250, 221, 210, 59, 208, 212, 131, 12, 203, 192, 222, 89, 68, 126, 205, 16, 157, 161, 219, 154, 59, 52, 205, 102 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 8,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 199, 145, 42, 119, 146, 68, 105, 140, 194, 51, 39, 81, 112, 86, 73, 40, 127, 58, 131, 227, 93, 133, 98, 241, 159, 75, 72, 24, 190, 195, 118, 87, 185, 96, 33, 246, 173, 53, 167, 236, 17, 102, 126, 167, 77, 94, 40, 155, 193, 236, 62, 176, 104, 123, 188, 46, 43, 151, 49, 238, 6, 159, 43, 71 }, new byte[] { 119, 31, 53, 121, 108, 39, 131, 29, 196, 57, 184, 141, 169, 92, 125, 55, 14, 231, 231, 240, 123, 133, 145, 204, 195, 90, 249, 209, 153, 214, 122, 78, 73, 37, 193, 100, 145, 243, 71, 123, 108, 134, 51, 24, 55, 148, 202, 104, 24, 97, 161, 203, 58, 30, 0, 156, 203, 182, 230, 98, 75, 2, 143, 231, 216, 188, 198, 94, 115, 55, 55, 64, 130, 129, 107, 197, 51, 177, 197, 11, 102, 239, 219, 18, 56, 104, 106, 19, 151, 39, 95, 128, 40, 95, 164, 206, 50, 204, 8, 254, 58, 167, 0, 113, 250, 221, 210, 59, 208, 212, 131, 12, 203, 192, 222, 89, 68, 126, 205, 16, 157, 161, 219, 154, 59, 52, 205, 102 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 9,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 59, 255, 23, 101, 59, 46, 84, 209, 98, 86, 151, 61, 153, 241, 31, 121, 26, 89, 215, 166, 160, 251, 242, 176, 246, 52, 68, 14, 127, 80, 205, 76, 98, 169, 200, 50, 112, 241, 77, 251, 168, 191, 144, 181, 174, 169, 150, 139, 224, 164, 85, 220, 89, 36, 199, 29, 126, 4, 43, 103, 235, 73, 84, 185 }, new byte[] { 119, 31, 53, 121, 108, 39, 131, 29, 196, 57, 184, 141, 169, 92, 125, 55, 14, 231, 231, 240, 123, 133, 145, 204, 195, 90, 249, 209, 153, 214, 122, 78, 73, 37, 193, 100, 145, 243, 71, 123, 108, 134, 51, 24, 55, 148, 202, 104, 24, 97, 161, 203, 58, 30, 0, 156, 203, 182, 230, 98, 75, 2, 143, 231, 216, 188, 198, 94, 115, 55, 55, 64, 130, 129, 107, 197, 51, 177, 197, 11, 102, 239, 219, 18, 56, 104, 106, 19, 151, 39, 95, 128, 40, 95, 164, 206, 50, 204, 8, 254, 58, 167, 0, 113, 250, 221, 210, 59, 208, 212, 131, 12, 203, 192, 222, 89, 68, 126, 205, 16, 157, 161, 219, 154, 59, 52, 205, 102 } });

            migrationBuilder.AddForeignKey(
                name: "FK_ProviderRegistrations_Users_UserId",
                table: "ProviderRegistrations",
                column: "UserId",
                principalTable: "Users",
                principalColumn: "Id",
                onDelete: ReferentialAction.Cascade);
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_ProviderRegistrations_Users_UserId",
                table: "ProviderRegistrations");

            migrationBuilder.DropPrimaryKey(
                name: "PK_ProviderRegistrations",
                table: "ProviderRegistrations");

            migrationBuilder.RenameTable(
                name: "ProviderRegistrations",
                newName: "ProviderRegistration");

            migrationBuilder.RenameIndex(
                name: "IX_ProviderRegistrations_UserId",
                table: "ProviderRegistration",
                newName: "IX_ProviderRegistration_UserId");

            migrationBuilder.AddPrimaryKey(
                name: "PK_ProviderRegistration",
                table: "ProviderRegistration",
                column: "Id");

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 13, 90, 205, 240, 173, 228, 164, 150, 158, 247, 81, 79, 245, 24, 122, 37, 104, 217, 80, 135, 127, 164, 168, 202, 176, 178, 149, 253, 55, 97, 31, 115, 106, 188, 52, 80, 57, 52, 145, 28, 219, 169, 210, 200, 225, 97, 200, 149, 108, 138, 121, 190, 70, 224, 98, 143, 92, 160, 29, 28, 183, 103, 71, 169 }, new byte[] { 175, 42, 69, 185, 216, 252, 131, 161, 1, 206, 144, 61, 23, 37, 138, 103, 136, 79, 98, 214, 107, 6, 48, 134, 168, 189, 9, 92, 68, 186, 150, 132, 139, 198, 70, 43, 114, 84, 84, 206, 229, 173, 57, 164, 161, 101, 112, 173, 214, 197, 53, 210, 166, 133, 209, 36, 93, 53, 138, 65, 133, 223, 218, 74, 76, 87, 244, 201, 232, 172, 7, 168, 8, 148, 32, 221, 214, 129, 185, 247, 133, 227, 120, 130, 121, 233, 169, 145, 104, 128, 117, 69, 143, 239, 138, 45, 252, 217, 45, 48, 229, 176, 242, 252, 26, 60, 90, 172, 13, 52, 238, 41, 203, 222, 223, 15, 175, 1, 161, 141, 185, 93, 150, 46, 16, 243, 199, 90 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 218, 254, 21, 245, 233, 232, 150, 230, 193, 250, 144, 142, 98, 237, 98, 225, 120, 63, 18, 111, 232, 169, 95, 243, 49, 58, 26, 27, 92, 65, 174, 60, 207, 111, 157, 237, 22, 118, 116, 236, 3, 163, 203, 238, 117, 155, 17, 254, 78, 159, 26, 20, 79, 244, 153, 48, 192, 218, 45, 220, 243, 248, 87, 214 }, new byte[] { 175, 42, 69, 185, 216, 252, 131, 161, 1, 206, 144, 61, 23, 37, 138, 103, 136, 79, 98, 214, 107, 6, 48, 134, 168, 189, 9, 92, 68, 186, 150, 132, 139, 198, 70, 43, 114, 84, 84, 206, 229, 173, 57, 164, 161, 101, 112, 173, 214, 197, 53, 210, 166, 133, 209, 36, 93, 53, 138, 65, 133, 223, 218, 74, 76, 87, 244, 201, 232, 172, 7, 168, 8, 148, 32, 221, 214, 129, 185, 247, 133, 227, 120, 130, 121, 233, 169, 145, 104, 128, 117, 69, 143, 239, 138, 45, 252, 217, 45, 48, 229, 176, 242, 252, 26, 60, 90, 172, 13, 52, 238, 41, 203, 222, 223, 15, 175, 1, 161, 141, 185, 93, 150, 46, 16, 243, 199, 90 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 86, 72, 207, 155, 70, 93, 62, 126, 19, 150, 96, 195, 235, 58, 96, 5, 39, 10, 117, 234, 83, 9, 171, 39, 44, 61, 75, 41, 105, 221, 192, 225, 71, 38, 189, 208, 65, 189, 221, 84, 102, 41, 152, 140, 71, 132, 180, 182, 91, 54, 204, 117, 186, 22, 36, 17, 229, 72, 188, 110, 197, 145, 175, 180 }, new byte[] { 175, 42, 69, 185, 216, 252, 131, 161, 1, 206, 144, 61, 23, 37, 138, 103, 136, 79, 98, 214, 107, 6, 48, 134, 168, 189, 9, 92, 68, 186, 150, 132, 139, 198, 70, 43, 114, 84, 84, 206, 229, 173, 57, 164, 161, 101, 112, 173, 214, 197, 53, 210, 166, 133, 209, 36, 93, 53, 138, 65, 133, 223, 218, 74, 76, 87, 244, 201, 232, 172, 7, 168, 8, 148, 32, 221, 214, 129, 185, 247, 133, 227, 120, 130, 121, 233, 169, 145, 104, 128, 117, 69, 143, 239, 138, 45, 252, 217, 45, 48, 229, 176, 242, 252, 26, 60, 90, 172, 13, 52, 238, 41, 203, 222, 223, 15, 175, 1, 161, 141, 185, 93, 150, 46, 16, 243, 199, 90 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 19, 158, 57, 86, 146, 219, 169, 198, 124, 144, 121, 253, 195, 93, 173, 37, 79, 254, 220, 100, 38, 246, 55, 155, 121, 197, 4, 223, 218, 231, 173, 238, 66, 181, 196, 5, 204, 215, 2, 117, 104, 82, 229, 119, 211, 103, 230, 163, 16, 130, 7, 222, 111, 47, 202, 36, 110, 194, 245, 252, 160, 46, 121, 39 }, new byte[] { 175, 42, 69, 185, 216, 252, 131, 161, 1, 206, 144, 61, 23, 37, 138, 103, 136, 79, 98, 214, 107, 6, 48, 134, 168, 189, 9, 92, 68, 186, 150, 132, 139, 198, 70, 43, 114, 84, 84, 206, 229, 173, 57, 164, 161, 101, 112, 173, 214, 197, 53, 210, 166, 133, 209, 36, 93, 53, 138, 65, 133, 223, 218, 74, 76, 87, 244, 201, 232, 172, 7, 168, 8, 148, 32, 221, 214, 129, 185, 247, 133, 227, 120, 130, 121, 233, 169, 145, 104, 128, 117, 69, 143, 239, 138, 45, 252, 217, 45, 48, 229, 176, 242, 252, 26, 60, 90, 172, 13, 52, 238, 41, 203, 222, 223, 15, 175, 1, 161, 141, 185, 93, 150, 46, 16, 243, 199, 90 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 8,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 121, 229, 231, 129, 228, 243, 30, 77, 122, 124, 147, 154, 130, 106, 142, 50, 252, 81, 121, 56, 132, 200, 35, 10, 166, 72, 174, 14, 137, 122, 198, 235, 95, 139, 65, 61, 252, 15, 156, 254, 165, 197, 73, 128, 175, 190, 93, 226, 160, 115, 40, 207, 1, 37, 155, 24, 72, 8, 182, 75, 43, 100, 59, 204 }, new byte[] { 175, 42, 69, 185, 216, 252, 131, 161, 1, 206, 144, 61, 23, 37, 138, 103, 136, 79, 98, 214, 107, 6, 48, 134, 168, 189, 9, 92, 68, 186, 150, 132, 139, 198, 70, 43, 114, 84, 84, 206, 229, 173, 57, 164, 161, 101, 112, 173, 214, 197, 53, 210, 166, 133, 209, 36, 93, 53, 138, 65, 133, 223, 218, 74, 76, 87, 244, 201, 232, 172, 7, 168, 8, 148, 32, 221, 214, 129, 185, 247, 133, 227, 120, 130, 121, 233, 169, 145, 104, 128, 117, 69, 143, 239, 138, 45, 252, 217, 45, 48, 229, 176, 242, 252, 26, 60, 90, 172, 13, 52, 238, 41, 203, 222, 223, 15, 175, 1, 161, 141, 185, 93, 150, 46, 16, 243, 199, 90 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 9,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 162, 205, 101, 122, 71, 75, 46, 115, 232, 147, 206, 103, 182, 224, 22, 145, 104, 16, 243, 132, 107, 69, 115, 180, 248, 91, 168, 228, 231, 209, 255, 99, 49, 71, 209, 10, 99, 192, 248, 26, 36, 111, 92, 82, 28, 42, 123, 116, 76, 65, 221, 189, 7, 204, 90, 179, 116, 221, 159, 63, 205, 232, 172, 19 }, new byte[] { 175, 42, 69, 185, 216, 252, 131, 161, 1, 206, 144, 61, 23, 37, 138, 103, 136, 79, 98, 214, 107, 6, 48, 134, 168, 189, 9, 92, 68, 186, 150, 132, 139, 198, 70, 43, 114, 84, 84, 206, 229, 173, 57, 164, 161, 101, 112, 173, 214, 197, 53, 210, 166, 133, 209, 36, 93, 53, 138, 65, 133, 223, 218, 74, 76, 87, 244, 201, 232, 172, 7, 168, 8, 148, 32, 221, 214, 129, 185, 247, 133, 227, 120, 130, 121, 233, 169, 145, 104, 128, 117, 69, 143, 239, 138, 45, 252, 217, 45, 48, 229, 176, 242, 252, 26, 60, 90, 172, 13, 52, 238, 41, 203, 222, 223, 15, 175, 1, 161, 141, 185, 93, 150, 46, 16, 243, 199, 90 } });

            migrationBuilder.AddForeignKey(
                name: "FK_ProviderRegistration_Users_UserId",
                table: "ProviderRegistration",
                column: "UserId",
                principalTable: "Users",
                principalColumn: "Id",
                onDelete: ReferentialAction.Cascade);
        }
    }
}
