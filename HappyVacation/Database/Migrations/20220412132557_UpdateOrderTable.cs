using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace HappyVacation.Database.Migrations
{
    public partial class UpdateOrderTable : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.AddColumn<DateTime>(
                name: "DepartureDate",
                table: "Orders",
                type: "datetime2",
                nullable: false,
                defaultValue: new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

            migrationBuilder.UpdateData(
                table: "Orders",
                keyColumn: "Id",
                keyValue: 1,
                column: "DepartureDate",
                value: new DateTime(2022, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified));

            migrationBuilder.UpdateData(
                table: "Orders",
                keyColumn: "Id",
                keyValue: 2,
                column: "DepartureDate",
                value: new DateTime(2022, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified));

            migrationBuilder.InsertData(
                table: "UserRoles",
                columns: new[] { "RoleId", "UserId" },
                values: new object[] { 3, 4 });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 78, 156, 226, 239, 122, 162, 172, 126, 103, 194, 91, 164, 93, 216, 58, 150, 211, 88, 223, 3, 150, 84, 254, 136, 233, 70, 192, 68, 172, 186, 66, 176, 43, 4, 190, 30, 97, 228, 233, 154, 75, 178, 236, 205, 223, 116, 41, 136, 44, 166, 226, 168, 37, 234, 68, 70, 211, 215, 167, 3, 247, 34, 230, 246 }, new byte[] { 211, 76, 32, 105, 37, 143, 186, 238, 133, 227, 196, 70, 72, 172, 102, 220, 200, 241, 208, 65, 227, 196, 32, 66, 26, 23, 231, 131, 25, 113, 190, 157, 253, 179, 95, 81, 234, 189, 159, 121, 244, 29, 18, 147, 84, 105, 190, 140, 160, 96, 22, 53, 39, 91, 207, 118, 126, 161, 50, 148, 186, 12, 189, 8, 223, 167, 29, 244, 220, 71, 82, 157, 109, 164, 214, 186, 174, 85, 164, 81, 22, 205, 81, 21, 249, 235, 235, 180, 131, 183, 144, 163, 103, 157, 190, 22, 74, 49, 123, 15, 126, 207, 253, 73, 186, 83, 7, 237, 185, 226, 247, 213, 105, 32, 213, 10, 246, 120, 108, 214, 82, 35, 74, 136, 172, 231, 178, 218 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 104, 68, 191, 211, 220, 209, 96, 254, 86, 191, 4, 109, 163, 68, 230, 172, 142, 47, 53, 29, 69, 159, 95, 141, 219, 221, 108, 215, 14, 228, 198, 215, 176, 125, 4, 156, 196, 63, 92, 155, 57, 98, 116, 81, 136, 166, 20, 50, 126, 123, 44, 38, 101, 92, 241, 38, 43, 96, 37, 15, 105, 60, 91, 133 }, new byte[] { 211, 76, 32, 105, 37, 143, 186, 238, 133, 227, 196, 70, 72, 172, 102, 220, 200, 241, 208, 65, 227, 196, 32, 66, 26, 23, 231, 131, 25, 113, 190, 157, 253, 179, 95, 81, 234, 189, 159, 121, 244, 29, 18, 147, 84, 105, 190, 140, 160, 96, 22, 53, 39, 91, 207, 118, 126, 161, 50, 148, 186, 12, 189, 8, 223, 167, 29, 244, 220, 71, 82, 157, 109, 164, 214, 186, 174, 85, 164, 81, 22, 205, 81, 21, 249, 235, 235, 180, 131, 183, 144, 163, 103, 157, 190, 22, 74, 49, 123, 15, 126, 207, 253, 73, 186, 83, 7, 237, 185, 226, 247, 213, 105, 32, 213, 10, 246, 120, 108, 214, 82, 35, 74, 136, 172, 231, 178, 218 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 103, 226, 88, 123, 75, 46, 238, 177, 152, 63, 88, 138, 235, 109, 27, 21, 121, 12, 36, 193, 172, 65, 84, 236, 36, 247, 116, 53, 96, 129, 69, 190, 120, 51, 241, 228, 183, 124, 202, 102, 194, 205, 228, 38, 105, 56, 162, 118, 62, 251, 16, 138, 145, 174, 234, 204, 214, 85, 55, 109, 218, 184, 150, 223 }, new byte[] { 211, 76, 32, 105, 37, 143, 186, 238, 133, 227, 196, 70, 72, 172, 102, 220, 200, 241, 208, 65, 227, 196, 32, 66, 26, 23, 231, 131, 25, 113, 190, 157, 253, 179, 95, 81, 234, 189, 159, 121, 244, 29, 18, 147, 84, 105, 190, 140, 160, 96, 22, 53, 39, 91, 207, 118, 126, 161, 50, 148, 186, 12, 189, 8, 223, 167, 29, 244, 220, 71, 82, 157, 109, 164, 214, 186, 174, 85, 164, 81, 22, 205, 81, 21, 249, 235, 235, 180, 131, 183, 144, 163, 103, 157, 190, 22, 74, 49, 123, 15, 126, 207, 253, 73, 186, 83, 7, 237, 185, 226, 247, 213, 105, 32, 213, 10, 246, 120, 108, 214, 82, 35, 74, 136, 172, 231, 178, 218 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 25, 38, 41, 198, 188, 117, 211, 218, 44, 197, 114, 147, 69, 134, 241, 8, 251, 211, 48, 165, 25, 197, 203, 124, 72, 80, 12, 201, 56, 33, 120, 53, 51, 133, 184, 122, 30, 30, 38, 197, 35, 91, 16, 128, 89, 201, 190, 65, 229, 140, 4, 193, 45, 31, 24, 225, 74, 151, 209, 168, 59, 234, 182, 142 }, new byte[] { 211, 76, 32, 105, 37, 143, 186, 238, 133, 227, 196, 70, 72, 172, 102, 220, 200, 241, 208, 65, 227, 196, 32, 66, 26, 23, 231, 131, 25, 113, 190, 157, 253, 179, 95, 81, 234, 189, 159, 121, 244, 29, 18, 147, 84, 105, 190, 140, 160, 96, 22, 53, 39, 91, 207, 118, 126, 161, 50, 148, 186, 12, 189, 8, 223, 167, 29, 244, 220, 71, 82, 157, 109, 164, 214, 186, 174, 85, 164, 81, 22, 205, 81, 21, 249, 235, 235, 180, 131, 183, 144, 163, 103, 157, 190, 22, 74, 49, 123, 15, 126, 207, 253, 73, 186, 83, 7, 237, 185, 226, 247, 213, 105, 32, 213, 10, 246, 120, 108, 214, 82, 35, 74, 136, 172, 231, 178, 218 } });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DeleteData(
                table: "UserRoles",
                keyColumns: new[] { "RoleId", "UserId" },
                keyValues: new object[] { 3, 4 });

            migrationBuilder.DropColumn(
                name: "DepartureDate",
                table: "Orders");

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 5, 70, 216, 86, 247, 147, 220, 175, 188, 43, 213, 0, 254, 13, 241, 110, 143, 225, 39, 47, 20, 250, 225, 82, 60, 203, 86, 90, 163, 162, 10, 22, 32, 64, 122, 32, 169, 73, 101, 103, 126, 47, 118, 103, 6, 149, 92, 65, 131, 231, 232, 77, 73, 118, 132, 126, 9, 14, 96, 65, 17, 245, 179, 109 }, new byte[] { 247, 250, 175, 199, 143, 204, 52, 128, 49, 150, 74, 121, 155, 68, 83, 124, 137, 68, 144, 235, 65, 114, 117, 1, 169, 136, 58, 233, 208, 60, 154, 205, 86, 244, 26, 44, 49, 11, 93, 8, 224, 237, 239, 70, 233, 83, 221, 241, 153, 206, 238, 138, 24, 161, 61, 228, 208, 106, 102, 166, 53, 62, 199, 113, 225, 126, 11, 132, 154, 8, 53, 58, 118, 32, 205, 20, 195, 171, 185, 160, 225, 97, 220, 198, 13, 98, 231, 25, 78, 156, 65, 76, 129, 32, 51, 181, 151, 186, 207, 160, 16, 160, 204, 26, 86, 140, 74, 52, 188, 81, 232, 18, 105, 248, 179, 114, 7, 234, 197, 124, 120, 21, 62, 27, 166, 4, 252, 124 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 190, 5, 175, 69, 152, 203, 102, 54, 81, 170, 153, 192, 15, 119, 206, 105, 137, 55, 4, 159, 50, 208, 71, 36, 177, 207, 80, 204, 152, 201, 199, 8, 205, 199, 85, 71, 23, 158, 211, 136, 203, 225, 6, 78, 43, 9, 99, 98, 252, 17, 198, 138, 250, 218, 82, 201, 50, 183, 226, 75, 49, 137, 207, 212 }, new byte[] { 247, 250, 175, 199, 143, 204, 52, 128, 49, 150, 74, 121, 155, 68, 83, 124, 137, 68, 144, 235, 65, 114, 117, 1, 169, 136, 58, 233, 208, 60, 154, 205, 86, 244, 26, 44, 49, 11, 93, 8, 224, 237, 239, 70, 233, 83, 221, 241, 153, 206, 238, 138, 24, 161, 61, 228, 208, 106, 102, 166, 53, 62, 199, 113, 225, 126, 11, 132, 154, 8, 53, 58, 118, 32, 205, 20, 195, 171, 185, 160, 225, 97, 220, 198, 13, 98, 231, 25, 78, 156, 65, 76, 129, 32, 51, 181, 151, 186, 207, 160, 16, 160, 204, 26, 86, 140, 74, 52, 188, 81, 232, 18, 105, 248, 179, 114, 7, 234, 197, 124, 120, 21, 62, 27, 166, 4, 252, 124 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 101, 141, 160, 219, 146, 193, 42, 12, 185, 196, 16, 154, 88, 112, 60, 243, 118, 31, 114, 16, 212, 226, 72, 232, 199, 234, 69, 63, 7, 125, 208, 213, 83, 1, 142, 109, 167, 246, 125, 135, 192, 198, 126, 87, 192, 218, 0, 223, 240, 93, 255, 190, 98, 248, 53, 192, 81, 165, 97, 125, 23, 189, 212, 8 }, new byte[] { 247, 250, 175, 199, 143, 204, 52, 128, 49, 150, 74, 121, 155, 68, 83, 124, 137, 68, 144, 235, 65, 114, 117, 1, 169, 136, 58, 233, 208, 60, 154, 205, 86, 244, 26, 44, 49, 11, 93, 8, 224, 237, 239, 70, 233, 83, 221, 241, 153, 206, 238, 138, 24, 161, 61, 228, 208, 106, 102, 166, 53, 62, 199, 113, 225, 126, 11, 132, 154, 8, 53, 58, 118, 32, 205, 20, 195, 171, 185, 160, 225, 97, 220, 198, 13, 98, 231, 25, 78, 156, 65, 76, 129, 32, 51, 181, 151, 186, 207, 160, 16, 160, 204, 26, 86, 140, 74, 52, 188, 81, 232, 18, 105, 248, 179, 114, 7, 234, 197, 124, 120, 21, 62, 27, 166, 4, 252, 124 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 167, 90, 193, 13, 182, 235, 153, 103, 218, 150, 89, 131, 4, 226, 235, 147, 36, 163, 186, 111, 214, 152, 130, 90, 69, 234, 51, 187, 61, 138, 115, 145, 74, 121, 158, 168, 151, 98, 25, 60, 246, 161, 190, 47, 243, 191, 161, 145, 158, 150, 60, 0, 189, 84, 141, 90, 212, 40, 136, 151, 13, 198, 13, 96 }, new byte[] { 247, 250, 175, 199, 143, 204, 52, 128, 49, 150, 74, 121, 155, 68, 83, 124, 137, 68, 144, 235, 65, 114, 117, 1, 169, 136, 58, 233, 208, 60, 154, 205, 86, 244, 26, 44, 49, 11, 93, 8, 224, 237, 239, 70, 233, 83, 221, 241, 153, 206, 238, 138, 24, 161, 61, 228, 208, 106, 102, 166, 53, 62, 199, 113, 225, 126, 11, 132, 154, 8, 53, 58, 118, 32, 205, 20, 195, 171, 185, 160, 225, 97, 220, 198, 13, 98, 231, 25, 78, 156, 65, 76, 129, 32, 51, 181, 151, 186, 207, 160, 16, 160, 204, 26, 86, 140, 74, 52, 188, 81, 232, 18, 105, 248, 179, 114, 7, 234, 197, 124, 120, 21, 62, 27, 166, 4, 252, 124 } });
        }
    }
}
