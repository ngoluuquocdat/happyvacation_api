using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace HappyVacation.Database.Migrations
{
    public partial class Add_WishItems_Table : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "WishItems",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    UserId = table.Column<int>(type: "int", nullable: false),
                    TourId = table.Column<int>(type: "int", nullable: false),
                    Date = table.Column<DateTime>(type: "datetime2", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WishItems", x => x.Id);
                    table.ForeignKey(
                        name: "FK_WishItems_Tours_TourId",
                        column: x => x.TourId,
                        principalTable: "Tours",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_WishItems_Users_UserId",
                        column: x => x.UserId,
                        principalTable: "Users",
                        principalColumn: "Id");
                });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 133, 196, 208, 28, 101, 51, 245, 104, 79, 183, 36, 255, 219, 224, 106, 214, 56, 222, 151, 5, 66, 201, 35, 40, 41, 15, 226, 161, 145, 67, 169, 166, 61, 22, 7, 222, 65, 18, 88, 80, 83, 148, 203, 245, 251, 64, 67, 69, 170, 173, 145, 220, 229, 216, 137, 145, 146, 242, 66, 80, 31, 141, 124, 163 }, new byte[] { 102, 180, 71, 182, 22, 121, 207, 142, 213, 244, 164, 94, 147, 48, 101, 151, 200, 232, 248, 143, 45, 198, 113, 50, 80, 10, 198, 167, 158, 59, 21, 200, 2, 163, 9, 75, 125, 193, 119, 49, 88, 24, 218, 236, 178, 26, 70, 1, 53, 91, 187, 146, 86, 240, 100, 13, 158, 42, 233, 44, 39, 231, 200, 201, 206, 33, 95, 117, 167, 1, 220, 87, 221, 25, 45, 235, 38, 97, 112, 93, 206, 117, 186, 173, 163, 98, 37, 26, 171, 17, 104, 67, 244, 10, 153, 134, 32, 77, 9, 151, 108, 109, 186, 105, 192, 141, 170, 131, 22, 134, 86, 128, 72, 34, 105, 141, 91, 7, 11, 254, 124, 134, 103, 148, 43, 184, 125, 54 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 118, 55, 57, 255, 95, 169, 82, 182, 177, 144, 160, 84, 173, 65, 64, 229, 63, 167, 239, 233, 180, 111, 7, 250, 160, 76, 232, 205, 174, 88, 237, 89, 227, 96, 129, 93, 16, 79, 133, 8, 131, 0, 74, 171, 95, 231, 1, 94, 191, 66, 167, 4, 185, 158, 216, 117, 206, 72, 39, 144, 162, 45, 241, 184 }, new byte[] { 102, 180, 71, 182, 22, 121, 207, 142, 213, 244, 164, 94, 147, 48, 101, 151, 200, 232, 248, 143, 45, 198, 113, 50, 80, 10, 198, 167, 158, 59, 21, 200, 2, 163, 9, 75, 125, 193, 119, 49, 88, 24, 218, 236, 178, 26, 70, 1, 53, 91, 187, 146, 86, 240, 100, 13, 158, 42, 233, 44, 39, 231, 200, 201, 206, 33, 95, 117, 167, 1, 220, 87, 221, 25, 45, 235, 38, 97, 112, 93, 206, 117, 186, 173, 163, 98, 37, 26, 171, 17, 104, 67, 244, 10, 153, 134, 32, 77, 9, 151, 108, 109, 186, 105, 192, 141, 170, 131, 22, 134, 86, 128, 72, 34, 105, 141, 91, 7, 11, 254, 124, 134, 103, 148, 43, 184, 125, 54 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 52, 102, 214, 143, 138, 75, 201, 247, 96, 153, 3, 92, 166, 158, 67, 197, 211, 187, 252, 164, 40, 111, 21, 134, 222, 199, 82, 224, 83, 220, 77, 121, 129, 143, 93, 252, 237, 85, 89, 72, 187, 202, 33, 214, 17, 179, 243, 98, 37, 113, 108, 124, 200, 246, 171, 2, 96, 156, 78, 58, 3, 151, 136, 26 }, new byte[] { 102, 180, 71, 182, 22, 121, 207, 142, 213, 244, 164, 94, 147, 48, 101, 151, 200, 232, 248, 143, 45, 198, 113, 50, 80, 10, 198, 167, 158, 59, 21, 200, 2, 163, 9, 75, 125, 193, 119, 49, 88, 24, 218, 236, 178, 26, 70, 1, 53, 91, 187, 146, 86, 240, 100, 13, 158, 42, 233, 44, 39, 231, 200, 201, 206, 33, 95, 117, 167, 1, 220, 87, 221, 25, 45, 235, 38, 97, 112, 93, 206, 117, 186, 173, 163, 98, 37, 26, 171, 17, 104, 67, 244, 10, 153, 134, 32, 77, 9, 151, 108, 109, 186, 105, 192, 141, 170, 131, 22, 134, 86, 128, 72, 34, 105, 141, 91, 7, 11, 254, 124, 134, 103, 148, 43, 184, 125, 54 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 208, 97, 111, 239, 60, 109, 48, 214, 37, 100, 58, 6, 19, 100, 118, 117, 240, 132, 51, 63, 211, 112, 4, 249, 30, 217, 100, 224, 232, 22, 24, 148, 221, 81, 80, 163, 114, 133, 125, 159, 57, 220, 252, 190, 106, 183, 143, 151, 133, 15, 170, 95, 64, 98, 20, 31, 146, 33, 76, 29, 226, 254, 50, 208 }, new byte[] { 102, 180, 71, 182, 22, 121, 207, 142, 213, 244, 164, 94, 147, 48, 101, 151, 200, 232, 248, 143, 45, 198, 113, 50, 80, 10, 198, 167, 158, 59, 21, 200, 2, 163, 9, 75, 125, 193, 119, 49, 88, 24, 218, 236, 178, 26, 70, 1, 53, 91, 187, 146, 86, 240, 100, 13, 158, 42, 233, 44, 39, 231, 200, 201, 206, 33, 95, 117, 167, 1, 220, 87, 221, 25, 45, 235, 38, 97, 112, 93, 206, 117, 186, 173, 163, 98, 37, 26, 171, 17, 104, 67, 244, 10, 153, 134, 32, 77, 9, 151, 108, 109, 186, 105, 192, 141, 170, 131, 22, 134, 86, 128, 72, 34, 105, 141, 91, 7, 11, 254, 124, 134, 103, 148, 43, 184, 125, 54 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 8,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 42, 115, 112, 78, 144, 28, 221, 94, 123, 200, 89, 200, 142, 153, 32, 37, 10, 183, 127, 238, 24, 158, 198, 213, 41, 0, 167, 86, 186, 162, 200, 34, 90, 99, 33, 242, 186, 3, 215, 96, 22, 251, 47, 232, 81, 111, 30, 17, 218, 142, 165, 26, 11, 26, 137, 247, 187, 223, 213, 177, 15, 149, 3, 88 }, new byte[] { 102, 180, 71, 182, 22, 121, 207, 142, 213, 244, 164, 94, 147, 48, 101, 151, 200, 232, 248, 143, 45, 198, 113, 50, 80, 10, 198, 167, 158, 59, 21, 200, 2, 163, 9, 75, 125, 193, 119, 49, 88, 24, 218, 236, 178, 26, 70, 1, 53, 91, 187, 146, 86, 240, 100, 13, 158, 42, 233, 44, 39, 231, 200, 201, 206, 33, 95, 117, 167, 1, 220, 87, 221, 25, 45, 235, 38, 97, 112, 93, 206, 117, 186, 173, 163, 98, 37, 26, 171, 17, 104, 67, 244, 10, 153, 134, 32, 77, 9, 151, 108, 109, 186, 105, 192, 141, 170, 131, 22, 134, 86, 128, 72, 34, 105, 141, 91, 7, 11, 254, 124, 134, 103, 148, 43, 184, 125, 54 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 9,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 7, 251, 127, 205, 78, 44, 54, 107, 113, 254, 108, 180, 88, 200, 132, 27, 233, 69, 107, 233, 216, 164, 127, 27, 190, 10, 93, 32, 156, 128, 82, 31, 241, 11, 239, 99, 189, 129, 166, 1, 142, 78, 189, 61, 33, 210, 220, 15, 210, 212, 35, 205, 39, 23, 100, 63, 67, 243, 86, 63, 141, 107, 136, 18 }, new byte[] { 102, 180, 71, 182, 22, 121, 207, 142, 213, 244, 164, 94, 147, 48, 101, 151, 200, 232, 248, 143, 45, 198, 113, 50, 80, 10, 198, 167, 158, 59, 21, 200, 2, 163, 9, 75, 125, 193, 119, 49, 88, 24, 218, 236, 178, 26, 70, 1, 53, 91, 187, 146, 86, 240, 100, 13, 158, 42, 233, 44, 39, 231, 200, 201, 206, 33, 95, 117, 167, 1, 220, 87, 221, 25, 45, 235, 38, 97, 112, 93, 206, 117, 186, 173, 163, 98, 37, 26, 171, 17, 104, 67, 244, 10, 153, 134, 32, 77, 9, 151, 108, 109, 186, 105, 192, 141, 170, 131, 22, 134, 86, 128, 72, 34, 105, 141, 91, 7, 11, 254, 124, 134, 103, 148, 43, 184, 125, 54 } });

            migrationBuilder.CreateIndex(
                name: "IX_WishItems_TourId",
                table: "WishItems",
                column: "TourId");

            migrationBuilder.CreateIndex(
                name: "IX_WishItems_UserId",
                table: "WishItems",
                column: "UserId");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "WishItems");

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 58, 120, 47, 76, 174, 140, 3, 142, 253, 106, 75, 10, 84, 69, 217, 193, 176, 46, 58, 7, 27, 85, 78, 80, 95, 68, 25, 73, 172, 163, 241, 242, 215, 35, 1, 209, 139, 115, 133, 230, 6, 32, 130, 107, 112, 121, 112, 201, 34, 170, 222, 230, 200, 114, 231, 51, 145, 246, 163, 227, 120, 5, 136, 0 }, new byte[] { 119, 31, 53, 121, 108, 39, 131, 29, 196, 57, 184, 141, 169, 92, 125, 55, 14, 231, 231, 240, 123, 133, 145, 204, 195, 90, 249, 209, 153, 214, 122, 78, 73, 37, 193, 100, 145, 243, 71, 123, 108, 134, 51, 24, 55, 148, 202, 104, 24, 97, 161, 203, 58, 30, 0, 156, 203, 182, 230, 98, 75, 2, 143, 231, 216, 188, 198, 94, 115, 55, 55, 64, 130, 129, 107, 197, 51, 177, 197, 11, 102, 239, 219, 18, 56, 104, 106, 19, 151, 39, 95, 128, 40, 95, 164, 206, 50, 204, 8, 254, 58, 167, 0, 113, 250, 221, 210, 59, 208, 212, 131, 12, 203, 192, 222, 89, 68, 126, 205, 16, 157, 161, 219, 154, 59, 52, 205, 102 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 154, 255, 99, 242, 226, 46, 43, 65, 82, 31, 32, 23, 16, 211, 219, 70, 214, 58, 14, 197, 215, 250, 165, 149, 153, 116, 160, 191, 222, 14, 40, 42, 244, 28, 129, 218, 227, 13, 126, 201, 185, 61, 81, 60, 6, 228, 222, 40, 48, 229, 157, 127, 60, 146, 137, 209, 225, 189, 80, 145, 106, 171, 90, 106 }, new byte[] { 119, 31, 53, 121, 108, 39, 131, 29, 196, 57, 184, 141, 169, 92, 125, 55, 14, 231, 231, 240, 123, 133, 145, 204, 195, 90, 249, 209, 153, 214, 122, 78, 73, 37, 193, 100, 145, 243, 71, 123, 108, 134, 51, 24, 55, 148, 202, 104, 24, 97, 161, 203, 58, 30, 0, 156, 203, 182, 230, 98, 75, 2, 143, 231, 216, 188, 198, 94, 115, 55, 55, 64, 130, 129, 107, 197, 51, 177, 197, 11, 102, 239, 219, 18, 56, 104, 106, 19, 151, 39, 95, 128, 40, 95, 164, 206, 50, 204, 8, 254, 58, 167, 0, 113, 250, 221, 210, 59, 208, 212, 131, 12, 203, 192, 222, 89, 68, 126, 205, 16, 157, 161, 219, 154, 59, 52, 205, 102 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 225, 79, 169, 143, 204, 249, 240, 177, 69, 147, 107, 0, 124, 235, 132, 191, 61, 56, 188, 138, 191, 86, 84, 213, 13, 40, 173, 205, 84, 228, 230, 202, 44, 5, 151, 189, 27, 27, 88, 139, 164, 119, 154, 10, 248, 255, 254, 40, 76, 147, 80, 129, 125, 76, 18, 123, 12, 184, 32, 135, 62, 151, 80, 213 }, new byte[] { 119, 31, 53, 121, 108, 39, 131, 29, 196, 57, 184, 141, 169, 92, 125, 55, 14, 231, 231, 240, 123, 133, 145, 204, 195, 90, 249, 209, 153, 214, 122, 78, 73, 37, 193, 100, 145, 243, 71, 123, 108, 134, 51, 24, 55, 148, 202, 104, 24, 97, 161, 203, 58, 30, 0, 156, 203, 182, 230, 98, 75, 2, 143, 231, 216, 188, 198, 94, 115, 55, 55, 64, 130, 129, 107, 197, 51, 177, 197, 11, 102, 239, 219, 18, 56, 104, 106, 19, 151, 39, 95, 128, 40, 95, 164, 206, 50, 204, 8, 254, 58, 167, 0, 113, 250, 221, 210, 59, 208, 212, 131, 12, 203, 192, 222, 89, 68, 126, 205, 16, 157, 161, 219, 154, 59, 52, 205, 102 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 97, 154, 86, 226, 29, 96, 240, 125, 232, 59, 191, 252, 25, 70, 21, 36, 22, 214, 179, 32, 198, 251, 229, 147, 169, 57, 0, 206, 235, 129, 136, 48, 100, 192, 37, 183, 138, 109, 45, 82, 161, 108, 148, 195, 212, 187, 88, 72, 36, 159, 47, 169, 102, 158, 74, 42, 109, 1, 85, 84, 147, 216, 189, 236 }, new byte[] { 119, 31, 53, 121, 108, 39, 131, 29, 196, 57, 184, 141, 169, 92, 125, 55, 14, 231, 231, 240, 123, 133, 145, 204, 195, 90, 249, 209, 153, 214, 122, 78, 73, 37, 193, 100, 145, 243, 71, 123, 108, 134, 51, 24, 55, 148, 202, 104, 24, 97, 161, 203, 58, 30, 0, 156, 203, 182, 230, 98, 75, 2, 143, 231, 216, 188, 198, 94, 115, 55, 55, 64, 130, 129, 107, 197, 51, 177, 197, 11, 102, 239, 219, 18, 56, 104, 106, 19, 151, 39, 95, 128, 40, 95, 164, 206, 50, 204, 8, 254, 58, 167, 0, 113, 250, 221, 210, 59, 208, 212, 131, 12, 203, 192, 222, 89, 68, 126, 205, 16, 157, 161, 219, 154, 59, 52, 205, 102 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 8,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 199, 145, 42, 119, 146, 68, 105, 140, 194, 51, 39, 81, 112, 86, 73, 40, 127, 58, 131, 227, 93, 133, 98, 241, 159, 75, 72, 24, 190, 195, 118, 87, 185, 96, 33, 246, 173, 53, 167, 236, 17, 102, 126, 167, 77, 94, 40, 155, 193, 236, 62, 176, 104, 123, 188, 46, 43, 151, 49, 238, 6, 159, 43, 71 }, new byte[] { 119, 31, 53, 121, 108, 39, 131, 29, 196, 57, 184, 141, 169, 92, 125, 55, 14, 231, 231, 240, 123, 133, 145, 204, 195, 90, 249, 209, 153, 214, 122, 78, 73, 37, 193, 100, 145, 243, 71, 123, 108, 134, 51, 24, 55, 148, 202, 104, 24, 97, 161, 203, 58, 30, 0, 156, 203, 182, 230, 98, 75, 2, 143, 231, 216, 188, 198, 94, 115, 55, 55, 64, 130, 129, 107, 197, 51, 177, 197, 11, 102, 239, 219, 18, 56, 104, 106, 19, 151, 39, 95, 128, 40, 95, 164, 206, 50, 204, 8, 254, 58, 167, 0, 113, 250, 221, 210, 59, 208, 212, 131, 12, 203, 192, 222, 89, 68, 126, 205, 16, 157, 161, 219, 154, 59, 52, 205, 102 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 9,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 59, 255, 23, 101, 59, 46, 84, 209, 98, 86, 151, 61, 153, 241, 31, 121, 26, 89, 215, 166, 160, 251, 242, 176, 246, 52, 68, 14, 127, 80, 205, 76, 98, 169, 200, 50, 112, 241, 77, 251, 168, 191, 144, 181, 174, 169, 150, 139, 224, 164, 85, 220, 89, 36, 199, 29, 126, 4, 43, 103, 235, 73, 84, 185 }, new byte[] { 119, 31, 53, 121, 108, 39, 131, 29, 196, 57, 184, 141, 169, 92, 125, 55, 14, 231, 231, 240, 123, 133, 145, 204, 195, 90, 249, 209, 153, 214, 122, 78, 73, 37, 193, 100, 145, 243, 71, 123, 108, 134, 51, 24, 55, 148, 202, 104, 24, 97, 161, 203, 58, 30, 0, 156, 203, 182, 230, 98, 75, 2, 143, 231, 216, 188, 198, 94, 115, 55, 55, 64, 130, 129, 107, 197, 51, 177, 197, 11, 102, 239, 219, 18, 56, 104, 106, 19, 151, 39, 95, 128, 40, 95, 164, 206, 50, 204, 8, 254, 58, 167, 0, 113, 250, 221, 210, 59, 208, 212, 131, 12, 203, 192, 222, 89, 68, 126, 205, 16, 157, 161, 219, 154, 59, 52, 205, 102 } });
        }
    }
}
