using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace HappyVacation.Database.Migrations
{
    public partial class TourPlaceTable : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_Tours_Places_PlaceId",
                table: "Tours");

            migrationBuilder.DropIndex(
                name: "IX_Tours_PlaceId",
                table: "Tours");

            migrationBuilder.DropColumn(
                name: "PlaceId",
                table: "Tours");

            migrationBuilder.RenameColumn(
                name: "ThumbnailUrl",
                table: "Providers",
                newName: "AvatarUrl");

            migrationBuilder.CreateTable(
                name: "TourPlaces",
                columns: table => new
                {
                    TourId = table.Column<int>(type: "int", nullable: false),
                    PlaceId = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TourPlaces", x => new { x.TourId, x.PlaceId });
                    table.ForeignKey(
                        name: "FK_TourPlaces_Places_PlaceId",
                        column: x => x.PlaceId,
                        principalTable: "Places",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_TourPlaces_Tours_TourId",
                        column: x => x.TourId,
                        principalTable: "Tours",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.InsertData(
                table: "TourPlaces",
                columns: new[] { "PlaceId", "TourId" },
                values: new object[,]
                {
                    { 3, 1 },
                    { 3, 2 }
                });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 5, 70, 216, 86, 247, 147, 220, 175, 188, 43, 213, 0, 254, 13, 241, 110, 143, 225, 39, 47, 20, 250, 225, 82, 60, 203, 86, 90, 163, 162, 10, 22, 32, 64, 122, 32, 169, 73, 101, 103, 126, 47, 118, 103, 6, 149, 92, 65, 131, 231, 232, 77, 73, 118, 132, 126, 9, 14, 96, 65, 17, 245, 179, 109 }, new byte[] { 247, 250, 175, 199, 143, 204, 52, 128, 49, 150, 74, 121, 155, 68, 83, 124, 137, 68, 144, 235, 65, 114, 117, 1, 169, 136, 58, 233, 208, 60, 154, 205, 86, 244, 26, 44, 49, 11, 93, 8, 224, 237, 239, 70, 233, 83, 221, 241, 153, 206, 238, 138, 24, 161, 61, 228, 208, 106, 102, 166, 53, 62, 199, 113, 225, 126, 11, 132, 154, 8, 53, 58, 118, 32, 205, 20, 195, 171, 185, 160, 225, 97, 220, 198, 13, 98, 231, 25, 78, 156, 65, 76, 129, 32, 51, 181, 151, 186, 207, 160, 16, 160, 204, 26, 86, 140, 74, 52, 188, 81, 232, 18, 105, 248, 179, 114, 7, 234, 197, 124, 120, 21, 62, 27, 166, 4, 252, 124 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 190, 5, 175, 69, 152, 203, 102, 54, 81, 170, 153, 192, 15, 119, 206, 105, 137, 55, 4, 159, 50, 208, 71, 36, 177, 207, 80, 204, 152, 201, 199, 8, 205, 199, 85, 71, 23, 158, 211, 136, 203, 225, 6, 78, 43, 9, 99, 98, 252, 17, 198, 138, 250, 218, 82, 201, 50, 183, 226, 75, 49, 137, 207, 212 }, new byte[] { 247, 250, 175, 199, 143, 204, 52, 128, 49, 150, 74, 121, 155, 68, 83, 124, 137, 68, 144, 235, 65, 114, 117, 1, 169, 136, 58, 233, 208, 60, 154, 205, 86, 244, 26, 44, 49, 11, 93, 8, 224, 237, 239, 70, 233, 83, 221, 241, 153, 206, 238, 138, 24, 161, 61, 228, 208, 106, 102, 166, 53, 62, 199, 113, 225, 126, 11, 132, 154, 8, 53, 58, 118, 32, 205, 20, 195, 171, 185, 160, 225, 97, 220, 198, 13, 98, 231, 25, 78, 156, 65, 76, 129, 32, 51, 181, 151, 186, 207, 160, 16, 160, 204, 26, 86, 140, 74, 52, 188, 81, 232, 18, 105, 248, 179, 114, 7, 234, 197, 124, 120, 21, 62, 27, 166, 4, 252, 124 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 101, 141, 160, 219, 146, 193, 42, 12, 185, 196, 16, 154, 88, 112, 60, 243, 118, 31, 114, 16, 212, 226, 72, 232, 199, 234, 69, 63, 7, 125, 208, 213, 83, 1, 142, 109, 167, 246, 125, 135, 192, 198, 126, 87, 192, 218, 0, 223, 240, 93, 255, 190, 98, 248, 53, 192, 81, 165, 97, 125, 23, 189, 212, 8 }, new byte[] { 247, 250, 175, 199, 143, 204, 52, 128, 49, 150, 74, 121, 155, 68, 83, 124, 137, 68, 144, 235, 65, 114, 117, 1, 169, 136, 58, 233, 208, 60, 154, 205, 86, 244, 26, 44, 49, 11, 93, 8, 224, 237, 239, 70, 233, 83, 221, 241, 153, 206, 238, 138, 24, 161, 61, 228, 208, 106, 102, 166, 53, 62, 199, 113, 225, 126, 11, 132, 154, 8, 53, 58, 118, 32, 205, 20, 195, 171, 185, 160, 225, 97, 220, 198, 13, 98, 231, 25, 78, 156, 65, 76, 129, 32, 51, 181, 151, 186, 207, 160, 16, 160, 204, 26, 86, 140, 74, 52, 188, 81, 232, 18, 105, 248, 179, 114, 7, 234, 197, 124, 120, 21, 62, 27, 166, 4, 252, 124 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 167, 90, 193, 13, 182, 235, 153, 103, 218, 150, 89, 131, 4, 226, 235, 147, 36, 163, 186, 111, 214, 152, 130, 90, 69, 234, 51, 187, 61, 138, 115, 145, 74, 121, 158, 168, 151, 98, 25, 60, 246, 161, 190, 47, 243, 191, 161, 145, 158, 150, 60, 0, 189, 84, 141, 90, 212, 40, 136, 151, 13, 198, 13, 96 }, new byte[] { 247, 250, 175, 199, 143, 204, 52, 128, 49, 150, 74, 121, 155, 68, 83, 124, 137, 68, 144, 235, 65, 114, 117, 1, 169, 136, 58, 233, 208, 60, 154, 205, 86, 244, 26, 44, 49, 11, 93, 8, 224, 237, 239, 70, 233, 83, 221, 241, 153, 206, 238, 138, 24, 161, 61, 228, 208, 106, 102, 166, 53, 62, 199, 113, 225, 126, 11, 132, 154, 8, 53, 58, 118, 32, 205, 20, 195, 171, 185, 160, 225, 97, 220, 198, 13, 98, 231, 25, 78, 156, 65, 76, 129, 32, 51, 181, 151, 186, 207, 160, 16, 160, 204, 26, 86, 140, 74, 52, 188, 81, 232, 18, 105, 248, 179, 114, 7, 234, 197, 124, 120, 21, 62, 27, 166, 4, 252, 124 } });

            migrationBuilder.CreateIndex(
                name: "IX_TourPlaces_PlaceId",
                table: "TourPlaces",
                column: "PlaceId");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "TourPlaces");

            migrationBuilder.RenameColumn(
                name: "AvatarUrl",
                table: "Providers",
                newName: "ThumbnailUrl");

            migrationBuilder.AddColumn<int>(
                name: "PlaceId",
                table: "Tours",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.UpdateData(
                table: "Tours",
                keyColumn: "Id",
                keyValue: 1,
                column: "PlaceId",
                value: 3);

            migrationBuilder.UpdateData(
                table: "Tours",
                keyColumn: "Id",
                keyValue: 2,
                column: "PlaceId",
                value: 3);

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 86, 216, 137, 100, 190, 7, 14, 106, 96, 116, 52, 37, 148, 152, 15, 17, 251, 8, 73, 40, 233, 149, 90, 141, 142, 42, 193, 131, 246, 206, 101, 245, 226, 101, 145, 221, 206, 223, 89, 193, 170, 6, 177, 228, 236, 101, 125, 247, 252, 116, 213, 43, 10, 201, 24, 165, 128, 23, 80, 108, 153, 71, 113, 69 }, new byte[] { 130, 191, 110, 108, 145, 189, 16, 233, 173, 115, 107, 196, 64, 42, 131, 61, 33, 0, 88, 34, 80, 50, 165, 95, 49, 29, 30, 55, 167, 109, 154, 61, 150, 237, 163, 133, 243, 106, 61, 19, 115, 244, 250, 43, 234, 6, 212, 159, 57, 31, 195, 202, 2, 239, 51, 17, 189, 64, 14, 252, 207, 252, 200, 27, 100, 235, 148, 138, 195, 21, 11, 242, 217, 254, 24, 29, 247, 57, 63, 118, 232, 215, 126, 35, 68, 221, 69, 237, 223, 38, 72, 111, 254, 122, 227, 69, 58, 175, 162, 223, 21, 240, 123, 157, 188, 35, 14, 106, 4, 146, 228, 126, 107, 93, 203, 170, 124, 63, 148, 255, 191, 119, 150, 174, 77, 199, 41, 223 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 20, 148, 122, 177, 133, 0, 207, 136, 10, 79, 229, 85, 224, 129, 2, 211, 178, 246, 95, 34, 95, 106, 232, 201, 154, 93, 127, 57, 75, 176, 198, 108, 116, 172, 58, 15, 157, 45, 207, 165, 60, 224, 60, 204, 93, 71, 12, 117, 202, 40, 123, 53, 154, 84, 220, 106, 153, 29, 151, 243, 44, 77, 50, 20 }, new byte[] { 130, 191, 110, 108, 145, 189, 16, 233, 173, 115, 107, 196, 64, 42, 131, 61, 33, 0, 88, 34, 80, 50, 165, 95, 49, 29, 30, 55, 167, 109, 154, 61, 150, 237, 163, 133, 243, 106, 61, 19, 115, 244, 250, 43, 234, 6, 212, 159, 57, 31, 195, 202, 2, 239, 51, 17, 189, 64, 14, 252, 207, 252, 200, 27, 100, 235, 148, 138, 195, 21, 11, 242, 217, 254, 24, 29, 247, 57, 63, 118, 232, 215, 126, 35, 68, 221, 69, 237, 223, 38, 72, 111, 254, 122, 227, 69, 58, 175, 162, 223, 21, 240, 123, 157, 188, 35, 14, 106, 4, 146, 228, 126, 107, 93, 203, 170, 124, 63, 148, 255, 191, 119, 150, 174, 77, 199, 41, 223 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 86, 205, 52, 28, 97, 147, 118, 118, 21, 225, 14, 215, 225, 9, 140, 125, 187, 119, 255, 248, 164, 134, 190, 197, 113, 173, 28, 12, 176, 238, 21, 167, 73, 61, 201, 198, 247, 180, 76, 248, 97, 102, 29, 245, 130, 221, 184, 33, 123, 194, 27, 99, 204, 126, 37, 160, 154, 191, 4, 42, 129, 52, 144, 69 }, new byte[] { 130, 191, 110, 108, 145, 189, 16, 233, 173, 115, 107, 196, 64, 42, 131, 61, 33, 0, 88, 34, 80, 50, 165, 95, 49, 29, 30, 55, 167, 109, 154, 61, 150, 237, 163, 133, 243, 106, 61, 19, 115, 244, 250, 43, 234, 6, 212, 159, 57, 31, 195, 202, 2, 239, 51, 17, 189, 64, 14, 252, 207, 252, 200, 27, 100, 235, 148, 138, 195, 21, 11, 242, 217, 254, 24, 29, 247, 57, 63, 118, 232, 215, 126, 35, 68, 221, 69, 237, 223, 38, 72, 111, 254, 122, 227, 69, 58, 175, 162, 223, 21, 240, 123, 157, 188, 35, 14, 106, 4, 146, 228, 126, 107, 93, 203, 170, 124, 63, 148, 255, 191, 119, 150, 174, 77, 199, 41, 223 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 179, 155, 118, 7, 140, 225, 210, 172, 95, 145, 239, 82, 176, 174, 6, 120, 167, 68, 12, 72, 138, 17, 109, 122, 194, 218, 46, 34, 81, 12, 196, 106, 250, 244, 46, 51, 70, 86, 147, 226, 0, 146, 205, 206, 43, 38, 213, 220, 225, 113, 244, 237, 147, 186, 8, 62, 38, 20, 144, 108, 160, 9, 127, 101 }, new byte[] { 130, 191, 110, 108, 145, 189, 16, 233, 173, 115, 107, 196, 64, 42, 131, 61, 33, 0, 88, 34, 80, 50, 165, 95, 49, 29, 30, 55, 167, 109, 154, 61, 150, 237, 163, 133, 243, 106, 61, 19, 115, 244, 250, 43, 234, 6, 212, 159, 57, 31, 195, 202, 2, 239, 51, 17, 189, 64, 14, 252, 207, 252, 200, 27, 100, 235, 148, 138, 195, 21, 11, 242, 217, 254, 24, 29, 247, 57, 63, 118, 232, 215, 126, 35, 68, 221, 69, 237, 223, 38, 72, 111, 254, 122, 227, 69, 58, 175, 162, 223, 21, 240, 123, 157, 188, 35, 14, 106, 4, 146, 228, 126, 107, 93, 203, 170, 124, 63, 148, 255, 191, 119, 150, 174, 77, 199, 41, 223 } });

            migrationBuilder.CreateIndex(
                name: "IX_Tours_PlaceId",
                table: "Tours",
                column: "PlaceId");

            migrationBuilder.AddForeignKey(
                name: "FK_Tours_Places_PlaceId",
                table: "Tours",
                column: "PlaceId",
                principalTable: "Places",
                principalColumn: "Id",
                onDelete: ReferentialAction.Cascade);
        }
    }
}
